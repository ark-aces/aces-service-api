/* 
 * Aces Service API
 *
 * API Specification for Aces Services for blockchain interoperability. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ArkAces.ServiceClient.Api;
using ArkAces.ServiceClient.Model;
using ArkAces.ServiceClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ArkAces.ServiceClient.Test
{
    /// <summary>
    ///  Class for testing NotFoundError
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class NotFoundErrorTests
    {
        // TODO uncomment below to declare an instance variable for NotFoundError
        //private NotFoundError instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of NotFoundError
            //instance = new NotFoundError();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NotFoundError
        /// </summary>
        [Test]
        public void NotFoundErrorInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" NotFoundError
            //Assert.IsInstanceOfType<NotFoundError> (instance, "variable 'instance' is a NotFoundError");
        }


        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Test]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Test]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }

    }

}
