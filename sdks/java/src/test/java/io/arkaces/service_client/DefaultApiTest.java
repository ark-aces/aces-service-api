/*
 * Aces Service API
 * API Specification for Aces Services for blockchain interoperability. 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.arkaces.service_client;

import io.arkaces.ApiException;
import io.swagger.client.model.Contract;
import io.swagger.client.model.ContractRequest;
import io.swagger.client.model.Health;
import io.swagger.client.model.Info;
import io.swagger.client.model.NotFoundError;
import io.swagger.client.model.ValidationError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Get Service Contract.
     *
     * Gets service contract info for a contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void contractsIdGetTest() throws ApiException {
        String id = null;
        Contract response = api.contractsIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Create Service Contract
     *
     * Creates a new service contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void contractsPostTest() throws ApiException {
        ContractRequest contractRequest = null;
        Contract response = api.contractsPost(contractRequest);

        // TODO: test validations
    }
    
    /**
     * Get Service Info.
     *
     * Gets Service Info object.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void infoGetTest() throws ApiException {
        Info response = api.infoGet();

        // TODO: test validations
    }
    
    /**
     * Get Health of node.
     *
     * Get application health information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void statusGetTest() throws ApiException {
        Health response = api.statusGet();

        // TODO: test validations
    }
    
}
