/**
 * Aces Service API
 * API Specification for Aces Services for blockchain interoperability. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AcesServiceApi);
  }
}(this, function(expect, AcesServiceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AcesServiceApi.AcesServiceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AcesServiceApi', function() {
    describe('contractsIdGet', function() {
      it('should call contractsIdGet successfully', function(done) {
        //uncomment below and update the code to test contractsIdGet
        //instance.contractsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contractsPost', function() {
      it('should call contractsPost successfully', function(done) {
        //uncomment below and update the code to test contractsPost
        //instance.contractsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('healthGet', function() {
      it('should call healthGet successfully', function(done) {
        //uncomment below and update the code to test healthGet
        //instance.healthGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rootGet', function() {
      it('should call rootGet successfully', function(done) {
        //uncomment below and update the code to test rootGet
        //instance.rootGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
